= System Calls =

== get_pid - Process management ==

{{{zig
extern fn get_pid() usize;
}}}

Returns the process's ID.

== yield - Process management ==

{{{zig
extern fn yield() void;
}}}

Yields the rest of the process's timeslice.

== set_break, move_break - Memory management ==

{{{zig
extern fn set_break(addr: *c_void) !void;
extern fn move_break(difference: isize) usize;
}}}

These system calls change the location of the program break. Refer to Linux man
pages (brk and sbrk) for more details.

If the result of set_break is in kernel space, it represents -1-errno.
Otherwise, it is the address of the new program break.

== map_mem, unmap_mem - Memory management ==

{{{zig
extern fn map_mem(start: *c_void, length: usize, prot: u8, flags: usize) usize;
extern fn unmap_mem(start: *c_void, length: usize) !void;
}}}

These system calls are used for mapping pages into the process's address space.
Refer to Linux man pages (mmap and munmap) for more details.

If the result of map_mem is in kernel space, it represents -1-errno. Otherwise,
it is the address of the start of the mapped area.

== send_mail - IPC ==

{{{zig
extern fn send_mail(
    target_process_id: usize,
    info: *const MailInfo,
    flags: u32,
) !void;

const MailInfo = extern struct {
    data: [255]u8,
    data_len: u8,
};

const mail_flags = struct {
    pub const fail_instead_of_blocking = 0x1;
    // pub const wait_for_reply = 0x2;
};
}}}

== send_box - IPC ==

{{{zig
extern fn send_box(
    target_process_id: usize,
    info: *const BoxInfo,
    flags: u32,
) !void;

const BoxInfo = extern struct {
    data_len: usize,
    data_ptr: *align(page_size) const [page_size]u8,
};

const box_flags = struct {
    pub const fail_instead_of_blocking = 0x1;
    // pub const wait_for_reply = 0x2;
};
}}}

== send_package - IPC ==

{{{zig
extern fn send_package(target_process_id: usize, info: *const PackageInfo, flags: u32) !void;

const PackageInfo = extern struct {
    data_len: usize,
    data_ptr: [*]align(page_size) const [page_size]u8,
    data_num_pages: usize,
};
}}}

== send_shipment - IPC ==

{{{zig
extern fn send_shipment(target_process_id: usize, info: *const ShipmentInfo, flags: u32) !void;

const ShipmentInfo = extern struct {
    data_len: usize,
    page_list_ptr: [*]const *align(page_size) const [page_size]u8,
    page_list_num_entries: usize,
};
}}}

== change_subscription - Events ==

{{{zig
extern fn change_subscription(flags: u8) void;
}}}

== wait_for_event - Events ==

{{{zig
extern fn wait_for_event() void;
}}}
