const std = @import("std");
const LibExeObjStep = std.build.LibExeObjStep;
const Builder = std.build.Builder;
const Target = std.Target;
const CrossTarget = std.zig.CrossTarget;
const builtin = @import("builtin");
const multiboot2_builder = @import("../../../../boot/multiboot2/build.zig");
const build_options = @import("../../../config/config.zig");

pub fn build(b: *Builder) void {
    const build_mode = b.standardReleaseOptions();

    // ACPICA library
    const patched_acpica_files = comptime blk: {
        var patched_files = acpica_files;
        for (patched_files) |*file_path| {
            file_path.* = "../" ++ file_path.*;
        }
        break :blk patched_files;
    };
    const acpica_library = b.addSystemCommand(&[_][]const u8{
        "wsl",
        "ls",
        "build-cache/built.txt",
        "2>/dev/null",
        "1>/dev/null",
        "||",
        "(",
        "cd",
        "build-cache",
        "&&",
        // "gcc",
        "clang",
        "-I../src/platform/acpi/acpica_9x/include_override",
        "-I../src/platform/acpi/acpica_9x/acpica/source/include",
        "-U_LINUX",
        "-U__linux__",
        "-D__9x__",
        "-DB_9X_64_BIT",
        "-DDEBUG=0",
        "-fPIC",
        "-disable-red-zone",
        "-nostdlib",
        "-ffunction-sections",
        "-c",
        "-w",
        "-O2",
    } ++ patched_acpica_files ++ [_][]const u8{
        "&&",
        "touch",
        "built.txt",
        ")",
    });

    // Main kernel executable
    const kernel = b.addExecutable("kernel_unstripped", "src/main.zig");
    kernel.addAssemblyFile("src/arch/x86_64/init.s");
    kernel.setBuildMode(build_mode);
    kernel.setTarget(CrossTarget{
        .cpu_arch = Target.Cpu.Arch.x86_64,
        .os_tag = Target.Os.Tag.freestanding,
        .abi = Target.Abi.gnu,
    });
    kernel.setLinkerScriptPath("src/arch/x86_64/build/link.ld");
    kernel.setOutputDir("out");
    kernel.force_pic = true;
    kernel.code_model = .kernel;
    kernel.single_threaded = true;
    kernel.disable_stack_probing = true;
    kernel.addCSourceFile("src/platform/acpi/acpica_9x/zig/os_layer_extra.c", &[_][]const u8{});
    kernel.step.dependOn(&acpica_library.step);
    inline for (acpica_object_names) |file_path| {
        kernel.addObjectFile("build-cache/" ++ file_path);
    }

    const kernel_stripped = b.addSystemCommand(&[_][]const u8{
        "wsl",
        "objcopy",
        "--strip-debug",
        "out/kernel_unstripped",
        "out/kernel",
    });
    kernel_stripped.step.dependOn(&kernel.step);

    const multiboot2 = multiboot2_builder.build(b, build_mode, CrossTarget{
        .cpu_arch = Target.Cpu.Arch.x86_64,
        .os_tag = Target.Os.Tag.freestanding,
        .abi = Target.Abi.none,
    });
    multiboot2.step.dependOn(&kernel_stripped.step);
    b.default_step.dependOn(&multiboot2.step);

    if (build_options.efi.efi_stub_enabled) {
        const efi = b.addExecutable("bootx64", "boot/efi/src/main.zig");
        efi.step.dependOn(&kernel_stripped.step);
        efi.setBuildMode(build_mode);
        efi.setTarget(CrossTarget{
            .cpu_arch = Target.Cpu.Arch.x86_64,
            .os_tag = Target.Os.Tag.uefi,
            .abi = Target.Abi.msvc,
        });
        efi.strip = true;
        efi.disable_stack_probing = true;
        efi.single_threaded = true;
        efi.setOutputDir("boot/efi/out");

        b.default_step.dependOn(&efi.step);
    } else {
        b.default_step.dependOn(&kernel_stripped.step);
    }
}

const acpica_source_base_path = "src/platform/acpi/acpica_9x/acpica/source/components/";

const acpica_files = [_][]const u8{
    acpica_source_base_path ++ "dispatcher/dsargs.c",
    acpica_source_base_path ++ "dispatcher/dscontrol.c",
    acpica_source_base_path ++ "dispatcher/dsdebug.c",
    acpica_source_base_path ++ "dispatcher/dsfield.c",
    acpica_source_base_path ++ "dispatcher/dsinit.c",
    acpica_source_base_path ++ "dispatcher/dsmethod.c",
    acpica_source_base_path ++ "dispatcher/dsmthdat.c",
    acpica_source_base_path ++ "dispatcher/dsobject.c",
    acpica_source_base_path ++ "dispatcher/dsopcode.c",
    acpica_source_base_path ++ "dispatcher/dspkginit.c",
    acpica_source_base_path ++ "dispatcher/dsutils.c",
    acpica_source_base_path ++ "dispatcher/dswexec.c",
    acpica_source_base_path ++ "dispatcher/dswload.c",
    acpica_source_base_path ++ "dispatcher/dswload2.c",
    acpica_source_base_path ++ "dispatcher/dswscope.c",
    acpica_source_base_path ++ "dispatcher/dswstate.c",
    acpica_source_base_path ++ "events/evevent.c",
    acpica_source_base_path ++ "events/evglock.c",
    acpica_source_base_path ++ "events/evgpe.c",
    acpica_source_base_path ++ "events/evgpeblk.c",
    acpica_source_base_path ++ "events/evgpeinit.c",
    acpica_source_base_path ++ "events/evgpeutil.c",
    acpica_source_base_path ++ "events/evhandler.c",
    acpica_source_base_path ++ "events/evmisc.c",
    acpica_source_base_path ++ "events/evregion.c",
    acpica_source_base_path ++ "events/evrgnini.c",
    acpica_source_base_path ++ "events/evsci.c",
    acpica_source_base_path ++ "events/evxface.c",
    acpica_source_base_path ++ "events/evxfevnt.c",
    acpica_source_base_path ++ "events/evxfgpe.c",
    acpica_source_base_path ++ "events/evxfregn.c",
    acpica_source_base_path ++ "executer/exconcat.c",
    acpica_source_base_path ++ "executer/exconfig.c",
    acpica_source_base_path ++ "executer/exconvrt.c",
    acpica_source_base_path ++ "executer/excreate.c",
    acpica_source_base_path ++ "executer/exdebug.c",
    acpica_source_base_path ++ "executer/exdump.c",
    acpica_source_base_path ++ "executer/exfield.c",
    acpica_source_base_path ++ "executer/exfldio.c",
    acpica_source_base_path ++ "executer/exmisc.c",
    acpica_source_base_path ++ "executer/exmutex.c",
    acpica_source_base_path ++ "executer/exnames.c",
    acpica_source_base_path ++ "executer/exoparg1.c",
    acpica_source_base_path ++ "executer/exoparg2.c",
    acpica_source_base_path ++ "executer/exoparg3.c",
    acpica_source_base_path ++ "executer/exoparg6.c",
    acpica_source_base_path ++ "executer/exprep.c",
    acpica_source_base_path ++ "executer/exregion.c",
    acpica_source_base_path ++ "executer/exresnte.c",
    acpica_source_base_path ++ "executer/exresolv.c",
    acpica_source_base_path ++ "executer/exresop.c",
    acpica_source_base_path ++ "executer/exserial.c",
    acpica_source_base_path ++ "executer/exstore.c",
    acpica_source_base_path ++ "executer/exstoren.c",
    acpica_source_base_path ++ "executer/exstorob.c",
    acpica_source_base_path ++ "executer/exsystem.c",
    acpica_source_base_path ++ "executer/extrace.c",
    acpica_source_base_path ++ "executer/exutils.c",
    acpica_source_base_path ++ "hardware/hwacpi.c",
    acpica_source_base_path ++ "hardware/hwesleep.c",
    acpica_source_base_path ++ "hardware/hwgpe.c",
    acpica_source_base_path ++ "hardware/hwpci.c",
    acpica_source_base_path ++ "hardware/hwregs.c",
    acpica_source_base_path ++ "hardware/hwsleep.c",
    acpica_source_base_path ++ "hardware/hwtimer.c",
    acpica_source_base_path ++ "hardware/hwvalid.c",
    acpica_source_base_path ++ "hardware/hwxface.c",
    acpica_source_base_path ++ "hardware/hwxfsleep.c",
    acpica_source_base_path ++ "namespace/nsaccess.c",
    acpica_source_base_path ++ "namespace/nsalloc.c",
    acpica_source_base_path ++ "namespace/nsarguments.c",
    acpica_source_base_path ++ "namespace/nsconvert.c",
    acpica_source_base_path ++ "namespace/nsdump.c",
    acpica_source_base_path ++ "namespace/nsdumpdv.c",
    acpica_source_base_path ++ "namespace/nseval.c",
    acpica_source_base_path ++ "namespace/nsinit.c",
    acpica_source_base_path ++ "namespace/nsload.c",
    acpica_source_base_path ++ "namespace/nsnames.c",
    acpica_source_base_path ++ "namespace/nsobject.c",
    acpica_source_base_path ++ "namespace/nsparse.c",
    acpica_source_base_path ++ "namespace/nspredef.c",
    acpica_source_base_path ++ "namespace/nsprepkg.c",
    acpica_source_base_path ++ "namespace/nsrepair.c",
    acpica_source_base_path ++ "namespace/nsrepair2.c",
    acpica_source_base_path ++ "namespace/nssearch.c",
    acpica_source_base_path ++ "namespace/nsutils.c",
    acpica_source_base_path ++ "namespace/nswalk.c",
    acpica_source_base_path ++ "namespace/nsxfeval.c",
    acpica_source_base_path ++ "namespace/nsxfname.c",
    acpica_source_base_path ++ "namespace/nsxfobj.c",
    acpica_source_base_path ++ "parser/psargs.c",
    acpica_source_base_path ++ "parser/psloop.c",
    acpica_source_base_path ++ "parser/psobject.c",
    acpica_source_base_path ++ "parser/psopcode.c",
    acpica_source_base_path ++ "parser/psopinfo.c",
    acpica_source_base_path ++ "parser/psparse.c",
    acpica_source_base_path ++ "parser/psscope.c",
    acpica_source_base_path ++ "parser/pstree.c",
    acpica_source_base_path ++ "parser/psutils.c",
    acpica_source_base_path ++ "parser/pswalk.c",
    acpica_source_base_path ++ "parser/psxface.c",
    acpica_source_base_path ++ "resources/rsaddr.c",
    acpica_source_base_path ++ "resources/rscalc.c",
    acpica_source_base_path ++ "resources/rscreate.c",
    acpica_source_base_path ++ "resources/rsinfo.c",
    acpica_source_base_path ++ "resources/rsio.c",
    acpica_source_base_path ++ "resources/rsirq.c",
    acpica_source_base_path ++ "resources/rslist.c",
    acpica_source_base_path ++ "resources/rsmemory.c",
    acpica_source_base_path ++ "resources/rsmisc.c",
    acpica_source_base_path ++ "resources/rsserial.c",
    acpica_source_base_path ++ "resources/rsutils.c",
    acpica_source_base_path ++ "resources/rsxface.c",
    acpica_source_base_path ++ "tables/tbdata.c",
    acpica_source_base_path ++ "tables/tbfadt.c",
    acpica_source_base_path ++ "tables/tbfind.c",
    acpica_source_base_path ++ "tables/tbinstal.c",
    acpica_source_base_path ++ "tables/tbprint.c",
    acpica_source_base_path ++ "tables/tbutils.c",
    acpica_source_base_path ++ "tables/tbxface.c",
    acpica_source_base_path ++ "tables/tbxfload.c",
    acpica_source_base_path ++ "tables/tbxfroot.c",
    acpica_source_base_path ++ "utilities/utaddress.c",
    acpica_source_base_path ++ "utilities/utalloc.c",
    acpica_source_base_path ++ "utilities/utascii.c",
    acpica_source_base_path ++ "utilities/utbuffer.c",
    acpica_source_base_path ++ "utilities/utcache.c",
    acpica_source_base_path ++ "utilities/utcopy.c",
    acpica_source_base_path ++ "utilities/utdebug.c",
    acpica_source_base_path ++ "utilities/utdecode.c",
    acpica_source_base_path ++ "utilities/utdelete.c",
    acpica_source_base_path ++ "utilities/uterror.c",
    acpica_source_base_path ++ "utilities/uteval.c",
    acpica_source_base_path ++ "utilities/utexcep.c",
    acpica_source_base_path ++ "utilities/utglobal.c",
    acpica_source_base_path ++ "utilities/uthex.c",
    acpica_source_base_path ++ "utilities/utids.c",
    acpica_source_base_path ++ "utilities/utinit.c",
    acpica_source_base_path ++ "utilities/utlock.c",
    acpica_source_base_path ++ "utilities/utmath.c",
    acpica_source_base_path ++ "utilities/utmisc.c",
    acpica_source_base_path ++ "utilities/utmutex.c",
    acpica_source_base_path ++ "utilities/utnonansi.c",
    acpica_source_base_path ++ "utilities/utobject.c",
    acpica_source_base_path ++ "utilities/utosi.c",
    acpica_source_base_path ++ "utilities/utownerid.c",
    acpica_source_base_path ++ "utilities/utpredef.c",
    acpica_source_base_path ++ "utilities/utprint.c",
    acpica_source_base_path ++ "utilities/utresdecode.c",
    acpica_source_base_path ++ "utilities/utresrc.c",
    acpica_source_base_path ++ "utilities/utstate.c",
    acpica_source_base_path ++ "utilities/utstring.c",
    acpica_source_base_path ++ "utilities/utstrsuppt.c",
    acpica_source_base_path ++ "utilities/utstrtoul64.c",
    acpica_source_base_path ++ "utilities/uttrack.c",
    acpica_source_base_path ++ "utilities/utuuid.c",
    acpica_source_base_path ++ "utilities/utxface.c",
    acpica_source_base_path ++ "utilities/utxferror.c",
    acpica_source_base_path ++ "utilities/utxfinit.c",
    acpica_source_base_path ++ "utilities/utxfmutex.c",
    // Override C library to not include mem functions
    "src/platform/acpi/acpica_9x/source_override/utclib.c",
};

const acpica_object_names = [_][]const u8{
    "dsargs.o",
    "dscontrol.o",
    "dsdebug.o",
    "dsfield.o",
    "dsinit.o",
    "dsmethod.o",
    "dsmthdat.o",
    "dsobject.o",
    "dsopcode.o",
    "dspkginit.o",
    "dsutils.o",
    "dswexec.o",
    "dswload.o",
    "dswload2.o",
    "dswscope.o",
    "dswstate.o",
    "evevent.o",
    "evglock.o",
    "evgpe.o",
    "evgpeblk.o",
    "evgpeinit.o",
    "evgpeutil.o",
    "evhandler.o",
    "evmisc.o",
    "evregion.o",
    "evrgnini.o",
    "evsci.o",
    "evxface.o",
    "evxfevnt.o",
    "evxfgpe.o",
    "evxfregn.o",
    "exconcat.o",
    "exconfig.o",
    "exconvrt.o",
    "excreate.o",
    "exdebug.o",
    "exdump.o",
    "exfield.o",
    "exfldio.o",
    "exmisc.o",
    "exmutex.o",
    "exnames.o",
    "exoparg1.o",
    "exoparg2.o",
    "exoparg3.o",
    "exoparg6.o",
    "exprep.o",
    "exregion.o",
    "exresnte.o",
    "exresolv.o",
    "exresop.o",
    "exserial.o",
    "exstore.o",
    "exstoren.o",
    "exstorob.o",
    "exsystem.o",
    "extrace.o",
    "exutils.o",
    "hwacpi.o",
    "hwesleep.o",
    "hwgpe.o",
    "hwpci.o",
    "hwregs.o",
    "hwsleep.o",
    "hwtimer.o",
    "hwvalid.o",
    "hwxface.o",
    "hwxfsleep.o",
    "nsaccess.o",
    "nsalloc.o",
    "nsarguments.o",
    "nsconvert.o",
    "nsdump.o",
    "nsdumpdv.o",
    "nseval.o",
    "nsinit.o",
    "nsload.o",
    "nsnames.o",
    "nsobject.o",
    "nsparse.o",
    "nspredef.o",
    "nsprepkg.o",
    "nsrepair.o",
    "nsrepair2.o",
    "nssearch.o",
    "nsutils.o",
    "nswalk.o",
    "nsxfeval.o",
    "nsxfname.o",
    "nsxfobj.o",
    "psargs.o",
    "psloop.o",
    "psobject.o",
    "psopcode.o",
    "psopinfo.o",
    "psparse.o",
    "psscope.o",
    "pstree.o",
    "psutils.o",
    "pswalk.o",
    "psxface.o",
    "rsaddr.o",
    "rscalc.o",
    "rscreate.o",
    "rsinfo.o",
    "rsio.o",
    "rsirq.o",
    "rslist.o",
    "rsmemory.o",
    "rsmisc.o",
    "rsserial.o",
    "rsutils.o",
    "rsxface.o",
    "tbdata.o",
    "tbfadt.o",
    "tbfind.o",
    "tbinstal.o",
    "tbprint.o",
    "tbutils.o",
    "tbxface.o",
    "tbxfload.o",
    "tbxfroot.o",
    "utaddress.o",
    "utalloc.o",
    "utascii.o",
    "utbuffer.o",
    "utcache.o",
    "utclib.o",
    "utcopy.o",
    "utdebug.o",
    "utdecode.o",
    "utdelete.o",
    "uterror.o",
    "uteval.o",
    "utexcep.o",
    "utglobal.o",
    "uthex.o",
    "utids.o",
    "utinit.o",
    "utlock.o",
    "utmath.o",
    "utmisc.o",
    "utmutex.o",
    "utnonansi.o",
    "utobject.o",
    "utosi.o",
    "utownerid.o",
    "utpredef.o",
    "utprint.o",
    "utresdecode.o",
    "utresrc.o",
    "utstate.o",
    "utstring.o",
    "utstrsuppt.o",
    "utstrtoul64.o",
    "uttrack.o",
    "utuuid.o",
    "utxface.o",
    "utxferror.o",
    "utxfinit.o",
    "utxfmutex.o",
};
